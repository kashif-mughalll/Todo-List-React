{"version":3,"sources":["Components/TodoContainer/Todo/Todo.js","Components/TodoContainer/TodoContainer.js","Components/Form/Form.js","Components/Header/Header.js","Components/UpdateForm/UpdateForm.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","id","Discreption","Completed","RemoveTodo","MarkCompleted","UpdateTodo","className","style","borderLeftColor","onClick","TodoContainer","Todos","map","element","key","Form","props","ref1","useRef","useState","Text","setText","ref","type","placeholder","onChange","e","target","value","current","undefined","val","trim","length","alert","parseInt","Math","random","AddTodo","Header","content","UpdateForm","todo","UpdateTodos","App","state","ShowUpdateForm","setState","forEach","NewList","push","NewElement","slice","index","splice","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.203f55fa.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Todo.css'\r\n\r\n\r\nvar Todo = ({id,Discreption,Completed,RemoveTodo,MarkCompleted,UpdateTodo})=>{\r\n    return(\r\n        <div className=\"todo\" style={{borderLeftColor: Completed ? 'green' : 'yellow'}}>\r\n            <p className=\"text2\">{Discreption}</p>\r\n            <button className=\"btn-style-1\" onClick={ ()=> UpdateTodo(id)} > Update </button>\r\n            <button className=\"btn-style-1\" onClick = { ()=> MarkCompleted(id) } >{Completed ? 'Mark Uncompleted' : 'Mark Completed'}</button>\r\n            <button className=\"btn-style-1\" onClick = { ()=> RemoveTodo(id) } > Delete </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo ;","import Todo from './Todo/Todo'\r\nimport React from 'react';\r\n\r\n\r\nvar TodoContainer = ({Todos,RemoveTodo,MarkCompleted,UpdateTodo})=>{\r\n    return(\r\n        <div>\r\n            {Todos.map((element)=>(\r\n                < Todo id={element.key} key={element.key} UpdateTodo={UpdateTodo} Discreption={element.Discreption} \r\n                MarkCompleted={MarkCompleted} Completed={element.Completed} RemoveTodo={RemoveTodo} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoContainer;","import React , {useState,useRef} from 'react';\r\n\r\nvar Form = (props) => {\r\n\r\n    const ref1 = useRef(null);    \r\n    const [Text, setText] = useState(\"\");\r\n    \r\n    return(\r\n        <div>\r\n            <input ref={ref1} className=\"input-bar\" type=\"text\" placeholder = \"Enter here ...\"\r\n                onChange = { (e)=> setText(e.target.value) }\r\n            ></input>\r\n            <button className=\"btn-style-2\"\r\n                onClick = {\r\n                    ()=>{\r\n                        ref1.current.value = '';\r\n                        setText(\"\");\r\n                        if(isEmpty(Text.trim())) {\r\n                            alert(\"Please Enter Something first ....\")\r\n                            return;\r\n                        }\r\n\r\n                        var Todo = {\r\n                            Discreption : Text,\r\n                            Completed : false,\r\n                            key : parseInt(Math.random() * 100000)\r\n                        }\r\n                        props.AddTodo(Todo);\r\n                    }\r\n                }\r\n            >Add</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n\r\n\r\nfunction isEmpty(val){\r\n    return (val === undefined || val == null || val.length <= 0) ? true : false;\r\n}","import React from 'react';\r\n\r\nvar Header = ({content}) => {\r\n    return(\r\n        <h1 className=\"header\" >{content}</h1>\r\n    );\r\n}\r\n\r\nexport default Header;","import React ,{ useState } from 'react'\r\n\r\nfunction UpdateForm({todo,UpdateTodos}) {\r\n    const [Text, setText] = useState(todo.Discreption)\r\n    return (\r\n        <div className=\"update-form\">\r\n            <input className=\"input-bar\" value={Text} onChange={(e)=> setText(e.target.value)} />\r\n            <button className=\"btn-style-1\" onClick={()=>{\r\n\r\n                if(isEmpty(Text.trim())) {\r\n                    alert(\"Please Enter Something first ....\")\r\n                    return;\r\n                }\r\n                UpdateTodos(todo.key,Text);\r\n\r\n            }}> Update </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateForm\r\n\r\n\r\nfunction isEmpty(val){\r\n    return (val === undefined || val == null || val.length <= 0) ? true : false;\r\n}","import React from 'react';\nimport TodoContainer from './Components/TodoContainer/TodoContainer'\nimport Form from './Components/Form/Form'\nimport Header from './Components/Header/Header';\nimport './App.css'\nimport UpdateForm from './Components/UpdateForm/UpdateForm'\n\n\nclass App extends React.Component {\n\n  state = {\n    Todos : [],\n    ShowUpdateForm : false,\n    todo : null\n  }\n\n  AddTodo = (Todo) => {\n    this.setState({\n      Todos : [...this.state.Todos,Todo]\n    })\n  }\n\n  UpdateTodo = (id)=> {\n    let todo = null;\n    this.state.Todos.forEach(element => { if(element.key == id) todo = element; });\n    this.setState({\n      ShowUpdateForm : true,\n      todo : todo\n    })\n  }\n\n  UpdateTodos = (id,Discreption) =>{\n    let NewList = [];    \n    this.state.Todos.forEach(element => {      \n      if(element.key != id) NewList.push(element)\n      else\n      {\n        let NewElement = {...element}\n        NewElement.Discreption = Discreption;\n        NewList.push(NewElement);\n      } \n    });\n    this.setState({\n      ShowUpdateForm : false,\n      Todos : NewList\n    })\n  }\n\n  RemoveTodo = (id)=> {\n    let NewList = this.state.Todos.slice();\n    for (let index = 0; index < NewList.length; index++) {\n      if(NewList[index].key == id){\n        NewList.splice(index,1);\n        this.setState({\n          Todos : NewList\n        })\n    }}\n  }\n\n  MarkCompleted = (id)=> {\n    let NewList = [];    \n    this.state.Todos.forEach(element => {      \n      if(element.key != id) NewList.push(element)\n      else\n      {\n        let NewElement = {...element}\n        NewElement.Completed = !NewElement.Completed;\n        NewList.push(NewElement);\n      } \n    });\n    this.setState({\n      Todos : NewList\n    })\n  }\n\n  render(){\n    return(\n      <div className=\"flex\">\n        {this.state.ShowUpdateForm ? <Header content=\"Update Todo\" /> : <Header content=\"Todo App\" /> }        \n        {this.state.ShowUpdateForm ? <UpdateForm UpdateTodos={this.UpdateTodos} todo={this.state.todo} /> : \n          (\n            <div className=\"App\">\n              <Form AddTodo={this.AddTodo} ></Form>\n              <TodoContainer UpdateTodo={this.UpdateTodo} Todos={this.state.Todos} MarkCompleted={this.MarkCompleted} RemoveTodo={this.RemoveTodo} />\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}